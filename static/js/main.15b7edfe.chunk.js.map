{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["HeaderApp","className","src","alt","width","height","ContentApp","type","noValidate","id","required","placeholder","value","class","name","FooterApp","href","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.15b7edfe.chunk.js","sourcesContent":["import React from 'react';\nimport './App.css';\nimport './FooterApp.css'\nimport './ContentApp.css'\nimport './Button.css'\nimport './text.css'\nimport './HearderApp.css'\nvar HeaderApp = () => (\n  <div>\n    <div className='header container'>\n      <img className=\"logo\" src=\"https://getbootstrap.com/docs/4.0/assets/brand/bootstrap-solid.svg\" alt=\"\" width={72} height={72} />\n      <h2>Checkout form</h2>\n      <p className=\"header-text\">Below is an example form built entirely with Bootstrap's form controls. Each required form group has a validation state that can be triggered by attempting to submit the form without completing it.</p>\n\n    </div>\n  </div>\n);\nvar ContentApp = () => (\n  <div className=\"row container\">\n    <div className=\" content-right order-md-2 \">\n      <h4 className=\"content-right-title d-flext justify-content-between\">\n        <span className=\"text-muted\">Your cart</span>\n        <span className=\"badge badge-secondary badge-pill\">3</span>\n      </h4>\n      <ul className=\"list-content-right mb3 \">\n        <li className=\"list-content-right-item  d-flext justify-content-between\">\n          <div>\n            <h6 className=\"my-name-product\">Product name</h6>\n            <small className=\"text-muted\">Brief description</small>\n          </div>\n          <span className=\"text-muted\">$12</span>\n        </li>\n        <li className=\"list-content-right-item d-flext justify-content-between\">\n          <div>\n            <h6 className=\"my-name-product\">Second product</h6>\n            <small className=\"text-muted\">Brief description</small>\n          </div>\n          <span className=\"text-muted\">$8</span>\n        </li>\n        <li className=\"list-content-right-item d-flext justify-content-between\">\n          <div>\n            <h6 className=\"my-name-product\">Third item</h6>\n            <small className=\"text-muted\">Brief description</small>\n          </div>\n          <span className=\"text-muted\">$5</span>\n        </li>\n        <li className=\"list-content-right-item d-flext justify-content-between App\">\n          <div className=\"text-success\">\n            <h6 className=\"my-name-product\">Promo code</h6>\n            <small>EXAMPLECODE</small>\n          </div>\n          <span className=\"text-success\">-$5</span>\n        </li>\n        <li className=\"list-content-right-item d-flext justify-content-between\">\n          <span>Total (USD)</span>\n          <strong>$20</strong>\n        </li>\n      </ul>\n      <form className=\"card p-2\">\n        <div className=\"input-group\">\n          <input type=\"text\" className=\"form-control\" />\n          <div className=\"input-group-append\">\n            <button type=\"submit\" className=\"btn btn-secondary\">Redeem</button>\n          </div>\n        </div>\n      </form>\n    </div>\n\n    <div className=\"content-left order-md-1\">\n      <h4 className=\"content-left-title\">Billing address</h4>\n      <form className=\"needs-validation\" noValidate>\n        <div className=\"row\">\n          <div className=\"content-left-title title mb3\">\n            <label >First name</label>\n            <input type=\"text\" className=\"form-control input-1\" />\n\n          </div>\n          <div className=\"content-left-title title mb3\">\n            <label>Last name</label>\n            <input type=\"text\" className=\"form-control input-1\" />\n\n          </div>\n        </div>\n        <div className=\"content-left-title mb3\">\n          <label >Username</label>\n          <div className=\"input-group\">\n            <div className=\"input-group-prepend\">\n              <span className=\"input-group-text\">@</span>\n            </div>\n            <input type=\"text\" className=\"form-control\" id=\"username\" required />\n\n          </div>\n        </div>\n        <div className=\"content-left-title mb3\">\n          <label >Email <span className=\"text-muted\">(Optional)</span></label>\n          <input type=\"email\" className=\"form-control\" id=\"email\" placeholder=\"you@example.com\" />\n\n        </div>\n        <div className=\"content-left-title mb3\">\n          <label >Address</label>\n          <input type=\"text\" className=\"form-control\" id=\"address\" placeholder=\"1234 Main St\" required />\n\n        </div>\n        <div className=\"content-left-title mb3\">\n          <label >Address 2 <span className=\"text-muted\">(Optional)</span></label>\n          <input type=\"text\" className=\"form-control\" id=\"address2\" placeholder=\"Apartment or suite\" />\n        </div>\n        <div className=\"row\">\n          <div className=\" content-left-title mb3 col-md-5\">\n            <label >Country</label>\n            <select className=\"custom-select\" id=\"country\" required>\n              <option value>Choose...</option>\n              <option>United States</option>\n            </select>\n\n          </div>\n          <div className=\" content-left-title mb3 col-md-5\">\n            <label>State</label>\n            <select className=\"custom-select\" id=\"state\" required>\n              <option value>Choose...</option>\n              <option>California</option>\n            </select>\n          </div>\n          <div className=\"content-left-title mb3 col-md-5\">\n            <label >Zip</label>\n            <input type=\"text\" className=\"form-control\" id=\"zip\" />\n          </div>\n        </div>\n        <hr className=\"mb-4\" />\n        <label className=\" custom-control custom-checkbox\">Shipping address is the same as my billing address\n        <input type=\"checkbox\" />\n          <span class=\"checkmark\"></span>\n\n        </label>\n        <label className=\" custom-control custom-checkbox\">Save this information for next time\n        <input type=\"checkbox\" />\n          <span class=\"checkmark\"></span>\n\n        </label>\n        <hr className=\"mb-4\" />\n        <h4 className=\"content-left-title\">Payment</h4>\n        <div className=\"d-block content-left-title\">\n          <label className=\" custom-control custom-radio\">Credit card\n          <input type=\"radio\" name=\"radio\" />\n            <span class=\"checkmark\"></span>\n\n          </label>\n          <label className=\" custom-control custom-radio\">Debit card\n          <input type=\"radio\" name=\"radio\" />\n            <span class=\"checkmark\"></span>\n\n          </label>\n          <label className=\" custom-control custom-radio\">Paypal\n          <input type=\"radio\" name=\"radio\" />\n            <span class=\"checkmark\"></span>\n\n          </label>\n        </div>\n        <div className=\"row\">\n          <div className=\"content-left-title title mb3\">\n            <label >Name on card</label>\n            <input type=\"text\" className=\"form-control input-1\" id=\"cc-name\" />\n            <small className=\"text-muted\">Full name as displayed on card</small>\n          </div>\n          <div className=\"content-left-title title mb3\">\n            <label>Credit card number</label>\n            <input type=\"text\" className=\"form-control input-1\" id=\"cc-number\" />\n          </div>\n        </div>\n        <div className=\"row \">\n          <div className=\"title1 \">\n            <div className=\"  mb3\">\n              <label >Expiration</label>\n              <input type=\"text\" className=\"form-control\" id=\"cc-expiration\" />\n\n            </div>\n            <div className=\" mb3\">\n              <label >CVV</label>\n              <input type=\"text\" className=\"form-control\" id=\"cc-cvv\" />\n\n            </div>\n          </div>\n\n        </div>\n        <hr className=\"mb-4\" />\n        <button className=\"btn btn-primary btn-lg btn-block\" type=\"submit\">Continue to checkout</button>\n      </form>\n\n    </div>\n  </div>\n);\nvar FooterApp = () => (\n  <div>\n    <footer className=\"footer-app container\">\n      <p className=\"footer-text\">© 2017-2018 Company Name</p>\n      <ul className=\"footer-list-link\">\n        <li className=\"footer-list-link-item\"><a href=\"#\">Privacy</a></li>\n        <li className=\"footer-list-link-item\"><a href=\"#\">Terms</a></li>\n        <li className=\"footer-list-link-item\"><a href=\"#\">Support</a></li>\n      </ul>\n    </footer>\n  </div>\n);\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <HeaderApp />\n      <ContentApp />\n      <FooterApp />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}